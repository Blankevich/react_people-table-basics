{"version":3,"sources":["page/NavigationPage.tsx","components/Navigation.tsx","api.ts","components/Loader/Loader.tsx","page/PersonLink.tsx","page/PeoplePage.tsx","App.tsx","index.tsx"],"names":["NavigationPage","to","text","end","className","isActive","classNames","Navigation","role","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonalLink","person","slug","sex","name","PeoplePage","useState","isLoading","setIsLoading","isPeople","setIsPeople","isError","setError","useParams","useEffect","data","namePeople","findName","find","people","length","map","born","died","motherName","fatherName","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.4b48c46d.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string\n  text: string\n  end?: boolean\n};\nexport const NavigationPage:FC<Props> = ({ to, text, end }) => (\n  <NavLink\n    to={to}\n    end={end}\n    className={({ isActive }) => (\n      classNames('navbar-item', { 'has-background-grey-lighter': isActive })\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { NavigationPage } from '../page/NavigationPage';\n\nexport const Navigation = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavigationPage to=\"/\" text=\"Home\" end />\n        <NavigationPage to=\"people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonalLink: FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types/Person';\nimport { PersonalLink } from './PersonLink';\n\nexport const PeoplePage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isPeople, setIsPeople] = useState<Person[]>([]);\n  const [isError, setError] = useState(false);\n  const { slug } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const data = await getPeople();\n\n        setIsPeople(data);\n      } catch {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n\n  const namePeople = (name: string | null) => {\n    const findName = isPeople.find(people => people.name === name);\n\n    if (!findName) {\n      return name || '-';\n    }\n\n    return <PersonalLink person={findName} />;\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isPeople.length && !isLoading && !isError && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {isPeople.map(person => (\n                <tr\n                  key={person.name}\n                  data-cy=\"person\"\n                  className={classNames(\n                    { 'has-background-warning': person.slug === slug },\n                  )}\n                >\n                  <td>\n                    <PersonalLink person={person} />\n                  </td>\n\n                  <td>{person.sex}</td>\n                  <td>{person.born}</td>\n                  <td>{person.died}</td>\n                  <td>{namePeople(person.motherName)}</td>\n                  <td>{namePeople(person.fatherName)}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  );\n};\n","// import { Route } from 'react-router-dom';\n\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\nimport { PeoplePage } from './page/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}